name: Merlin_Clash_Build_CI

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        default: 'mipsle-softfloat'
        options:
        - armv7
        - armv8
        - mipsle-hardfloat
        - mipsle-softfloat
      clashversion:
        type: choice
        default: '1.11.8'
        options:
        - 1.11.0
        - 1.11.4
        - 1.11.8
        - 1.13.0
      upxclash:
        type: boolean
        description: 'upx clash'
        default: 'false'
env:
  PACKAGE_PATH: /home/package
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
      - name: Checkout
        uses: actions/checkout@main
        
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt -y install
          
      - name: copy & unextract package
        run: |
          sudo cp -f clash.tar.gz /home/runneradmin/clash.tar.gz
          cd /home/runneradmin
          sudo chmod +x ./clash.tar.gz
          sudo tar -xvf ./clash.tar.gz
      - name: download & unextract clash
        run: |
          cd /home/runneradmin
          sudo wget https://github.com/Dreamacro/clash/releases/download/v${{ github.event.inputs.clashversion }}/clash-linux-${{ github.event.inputs.target }}-v${{ github.event.inputs.clashversion }}.gz
          sudo gunzip clash-linux-${{ github.event.inputs.target }}-v${{ github.event.inputs.clashversion }}.gz
          sudo mv -f clash-linux-${{ github.event.inputs.target }}-v${{ github.event.inputs.clashversion }} clash
          sudo chmod 775 clash
      - name: upx clash
        if: github.event.inputs.upxclash == 'true'
        run: |
          sudo cd /home/runneradmin
          sudo upx -9 clash
      - name: update clash
        run: |
          sudo cd /home/runneradmin
          sudo cp -f clash ./merlinclash/clash/
      - name: update koolproxy for mipsel
        if: github.event.inputs.target == 'mipsle-hardfloat' || github.event.inputs.target == 'mipsle-softfloat'
        run: |
          sudo cp -f kp/koolproxy /home/runneradmin
          sudo cd /home/runneradmin
          sudo chmod 775 koolproxy
          sudo cp -f koolproxy ./merlinclash/koolproxy/
      - name: generate new cers
        run: |
          sudo mkdir -p /home/runneradmin/ca
          sudo cp -f unblockneteasemusic/createCertificate.sh /home/runneradmin/ca
          cd /home/runneradmin/ca
          sudo chmod +x createCertificate.sh
          sudo ./createCertificate.sh
          sudo cp -f ca.crt /home/runneradmin/merlinclash/UnblockMusic/
          sudo cp -f server.crt /home/runneradmin/merlinclash/UnblockMusic/
          sudo cp -f server.key /home/runneradmin/merlinclash/UnblockMusic/
      - name: copy UnblockNeteaseMusic bin
        run: |
          if [ "${{ github.event.inputs.target }}" = "mipsle-softfloat" ]
          then
            sudo cp -f unblockneteasemusic/UnblockNeteaseMusic-misple-softfloat /home/runneradmin/merlinclash/UnblockMusic/UnblockNeteaseMusic
          fi
          if [ "${{ github.event.inputs.target }}" = "mipsle-hardfloat" ]
          then
            sudo cp -f unblockneteasemusic/UnblockNeteaseMusic-misple-hardfloat /home/runneradmin/merlinclash/UnblockMusic/UnblockNeteaseMusic
          fi
          if [ "${{ github.event.inputs.target }}" = "armv7" ]
          then
            sudo cp -f unblockneteasemusic/UnblockNeteaseMusic-armv7 /home/runneradmin/merlinclash/UnblockMusic/UnblockNeteaseMusic
          fi
          if [ "${{ github.event.inputs.target }}" = "armv8" ]
          then
            sudo cp -f unblockneteasemusic/UnblockNeteaseMusic-arm /home/runneradmin/merlinclash/UnblockMusic/UnblockNeteaseMusic
          fi
      - name: reextract package
        run: |
          cd /home/runneradmin
          sudo tar -zcf merlin_clash_${{ github.event.inputs.target }}_v${{ github.event.inputs.clashversion }}.tar.gz ./merlinclash
          sudo mkdir -p $PACKAGE_PATH/
          sudo mv merlin_clash_${{ github.event.inputs.target }}_v${{ github.event.inputs.clashversion }}.tar.gz $PACKAGE_PATH/merlin_clash_${{ github.event.inputs.target }}_v${{ github.event.inputs.clashversion }}.tar.gz
          sudo cd $PACKAGE_PATH
          echo "PACKAGE=$PWD" >> $GITHUB_ENV
      - name : upload package
        uses: actions/upload-artifact@main
        with:
          name: merlin-clash-packages
          path: ${{ env.PACKAGE }}
